basePath: /
definitions:
  schema.BookingSchema:
    properties:
      address:
        type: string
      booking_status:
        type: string
      city_id:
        type: integer
      customer_id:
        type: integer
      customer_rating:
        type: integer
      day:
        type: integer
      id:
        type: integer
      month:
        type: integer
      service_id:
        type: integer
      vendor_id:
        type: integer
      vendor_rating:
        type: integer
      year:
        type: integer
    type: object
  schema.CustomerProfileSchema:
    properties:
      city_id:
        type: integer
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      rating:
        type: string
      rating_count:
        type: string
    type: object
  schema.VendorProfileSchema:
    properties:
      city_id:
        type: integer
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      rating:
        type: string
      rating_count:
        type: string
      service1_id:
        type: integer
      service2_id:
        type: integer
      service3_id:
        type: integer
    type: object
  structTypes.BookingRescheduleRequest:
    properties:
      booking_id:
        type: integer
      day:
        type: integer
      month:
        type: integer
      year:
        type: integer
    type: object
  structTypes.City:
    properties:
      city_id:
        type: integer
      city_name:
        type: string
    type: object
  structTypes.Cust:
    properties:
      auth_token:
        type: string
      city_id:
        type: integer
      city_name:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone:
        type: integer
      rating:
        type: number
      rating_count:
        type: integer
    type: object
  structTypes.Date:
    properties:
      day:
        type: integer
      month:
        type: integer
      year:
        type: integer
    type: object
  structTypes.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  structTypes.RatingRequest:
    properties:
      booking_id:
        type: integer
      rating:
        type: integer
    type: object
  structTypes.Vendor:
    properties:
      auth_token:
        type: string
      city_name:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone:
        type: integer
      rating:
        description: |-
          Service2   string `json: "service2"`
          Service3   string `json: "service3"`
        type: number
      rating_count:
        type: integer
      service_name:
        type: string
    type: object
host: localhost:10000
info:
  contact: {}
  title: HandyConnect API documentation
  version: 1.0.0
paths:
  /:
    get:
      description: get HomePage
      responses:
        "200":
          description: OK
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
      summary: Get HomePage
      tags:
      - Home
  /availability:
    get:
      parameters:
      - description: city ID
        in: query
        name: city_id
        required: true
        type: string
      - description: service ID
        in: query
        name: service_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/structTypes.Date'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            type: object
      summary: get service's availability in a city
  /booking:
    post:
      parameters:
      - description: booking data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schema.BookingSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: create new service booking
  /cancelBooking:
    delete:
      description: Cancel a booking by booking ID
      parameters:
      - description: booking id
        in: query
        name: booking_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: Cancel a booking
  /cities:
    get:
      description: get all cities in which services are available
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/structTypes.City'
              type: array
            type: array
      summary: Get all cities
  /customer:
    get:
      description: Get Customer by ID
      parameters:
      - description: customer id
        in: query
        name: customer_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structTypes.Cust'
      summary: Get Customer data
  /customerLogin:
    post:
      parameters:
      - description: Login data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/structTypes.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
      summary: verify email and password of customer
  /customerRating:
    post:
      parameters:
      - description: rating data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/structTypes.RatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: rating provided by customer for a booking
  /customerSignUp:
    post:
      parameters:
      - description: customer data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schema.CustomerProfileSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: create new customer
  /endService:
    post:
      parameters:
      - description: booking id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Finish a service
  /rescheduleBooking:
    post:
      parameters:
      - description: Booking Reschedule Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/structTypes.BookingRescheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Reschedule a current booking
  /startService:
    post:
      parameters:
      - description: booking id
        in: query
        name: id
        required: true
        type: string
      - description: otp
        in: query
        name: otp
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Start a service
  /vendor:
    get:
      description: Get Vendor by ID
      parameters:
      - description: vendor_id
        in: query
        name: vendor_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structTypes.Vendor'
      summary: Get Vendor data
  /vendorLogin:
    post:
      parameters:
      - description: Login data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/structTypes.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
      summary: verify email and password of vendor
  /vendorRating:
    post:
      parameters:
      - description: rating data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/structTypes.RatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: rating provided by vendor for a customer
  /vendorSignUp:
    post:
      parameters:
      - description: vendor data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schema.VendorProfileSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: create new vendor
swagger: "2.0"
